package com.example.y.mvp;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * Master of DAO (schema version 1): knows all DAOs.
 */
public class DaoMaster extends AbstractDaoMaster {
    private static final int SCHEMA_VERSION = 1;

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(NewsTabNameInfoDao.class);
        registerDaoClass(NewsListInfoDao.class);
        registerDaoClass(NewsDetailInfoDao.class);
        registerDaoClass(ImageTabNameInfoDao.class);
        registerDaoClass(ImageListInfoDao.class);
        registerDaoClass(ImageDetailInfoDao.class);
        registerDaoClass(JokePicInfoDao.class);
        registerDaoClass(JokeTextInfoDao.class);
    }

    /**
     * Creates underlying database table using DAOs.
     */
    private static void createAllTables(SQLiteDatabase db) {
        NewsTabNameInfoDao.createTable(db);
        NewsListInfoDao.createTable(db);
        NewsDetailInfoDao.createTable(db);
        ImageTabNameInfoDao.createTable(db);
        ImageListInfoDao.createTable(db);
        ImageDetailInfoDao.createTable(db);
        JokePicInfoDao.createTable(db);
        JokeTextInfoDao.createTable(db);
    }

    /**
     * Drops underlying database table using DAOs.
     */
    private static void dropAllTables(SQLiteDatabase db) {
        NewsTabNameInfoDao.dropTable(db);
        NewsListInfoDao.dropTable(db);
        NewsDetailInfoDao.dropTable(db);
        ImageTabNameInfoDao.dropTable(db);
        ImageListInfoDao.dropTable(db);
        ImageDetailInfoDao.dropTable(db);
        JokePicInfoDao.dropTable(db);
        JokeTextInfoDao.dropTable(db);
    }

    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }

    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }

    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name) {
            super(context, name, null, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db);
        }
    }

    /**
     * WARNING: Drops all table on Upgrade! Use only during development.
     */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context) {
            super(context, com.example.y.mvp.utils.db.GreenDaoUtils.SQL_NAME);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db);
            onCreate(db);
        }
    }

}
